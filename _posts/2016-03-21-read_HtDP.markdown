---
layout: post
title: "HtDP读后感"
date: 2016-03-21 19:53:02 +8000
categories: 杂
---


>我小时候很喜欢电脑。
>
>不是听音乐，也不是玩游戏。纯粹是好奇：为什么一部冷冰冰的机器插上电源之后居然能如此强大。我每个月都期盼着订阅的电脑杂志快点到，到手以后总先上手试试里面的“奇淫巧技”。再后来，因为Win9X的赢弱，又学会了使用系统引导盘的`SYS`，`Format`，`FDISK`命令。初一的时候，偶然了解到开源界的Linux，尝试安装了一次`Magic Linux`（当然以失败告终，衰～）。初三暑假，在老爸的赞助下，我还组装了个人的第一台电脑。
>
>一切似乎都进展得不错。
>
上了高中，学校组织编程兴趣小组的时候，我毫不犹豫的报了名。那我真的是兴致勃勃，还去书店里买了本Pascal的语法书，里面还有算法之类的内容。可是到了课堂上，老师快速的讲过语法内容，直接就开始讲如何解决那些看起来并没什么用处的数学题。可怜台下的我，根本搞不清楚这些数学题目，为什么要转化成这个样子，为什么我要用`if`而不用`case`，还有两级`for`循环嵌套里的`i`和`j`都是什么玩意儿？再后来，我灰溜溜的走了，心想还是数理化好，起码知道书里的内容都是怎么来的。
>
>......直到我遇到了这本HtDP。

从第一章开始，我就喜欢上了这本书。简单清晰的DrRacket语法没花什么时间就上手了。作者从最简单的加减乘除开始一步一步深入，讲述函数的用处、如何定义函数、再到常变量的用处和“魔法数字”的害处。这本书不但讲述程序本身，还告诉你怎样将真实的世界抽象成一组有限状态机(FSM)，然后再把问题抽象成两部分：数据和函数——程序的基本组成部分。由此，一个基本的程序才能够成形。

根据构建程序的知识的不同，HtDP将代码看作两类：一类是根据所解决问题的专业知识构建的代码，一类是根据数据结构构建出的代码。对于自我引用式(Self-Referential)的可变长度数据(Arbitrary Large Data)，处理该数据的函数也通常会自我递归调用。

HtDP根据所处理数据的复杂程度，还把函数递归分为两类方式：Structral和Generative。递归往往将参数不断分解为小的数据，然后将小数据分情况继续处理。S型递归的特点是，分解后的数据和输入参数的同一类型。而G型递归则将问题不断分解成小的问题处理，其形式上往往是若干函数之间递归调用。乍一看前者貌似是后者的特殊形式，然而作者对此给出了有力的警告：

>This \"everything is equal\" attitude, however, is of no help if we wish to understand the process of designing functions. It confuses two kinds of design that require different forms of knowledge and that have different consequences.
>
>这种“万物归一”的态度，对理解两类递归的设计流程并没有什么帮助。它忽视了：两类递归需要不同的前提，并产生出不同的结果。

本书不但告诉你如何用代码描述自己的逻辑，还告诉你怎样提高程序的可读性。例如，通过详细的注释描述函数的输入和输出的数据类型，用自然语言一句话讲明函数的目的、用途；描述数据结构内各数据域的类型和该数据所表示的实际意义。再比如，在什么情况下分离部分代码，设计成辅助函数，等等。

倘若认为这本书只是讲述一些条条框框，那你就太小看这本书了。编程的本事高低不在读多少规矩，而在于动手去写。本书即遵循这一原则，精心设计了大量习题，有助于加深对书中示例的理解。更有甚者，一部分章节没有示例，内容的推进完全依靠读者完成习题。读者完成习题的时候，心中自然会有所感悟。

本书所使用的DrRacket语言在仅仅是门教学语言，所属的函数式语言LISP也非业界主流。正如其名——“How to Design Programs”，本书着重介绍的是编程的思想，是方法。例如，尽管Accumulator在 C语言里或许一套for循环就可以轻松搞定，但其背后所蕴含的正是算法里的基本原则之一：不做重复计算。这些对于初学者而言是非常有益的指导。

国内的教材往往惜字如金，读起来仿佛字字箴言，却又晦涩难懂。HtDP则行文流畅，详尽讲述甚至有些过头。本书对编程初学者非常友好：除去英语这一硬关口之外，本书所需的其他知识甚少，掌握简单的代数几何知识都可以看下去。如果我在高中的时候能够看到这本书（当然得是中译版的），也许情况完全不同。

我非常喜欢这本书，即便如今已经读完，仍有抑制不住的冲动想要自行翻译，哪怕需要三年五载，也权作提高英文水平。怎奈受限于该书的发布协议，只好期待另有一部同等优秀的汉语书籍来为新人指路。

>HtDP第一版曾以[《程序设计方法》](https://book.douban.com/subject/1140942/)之名翻译出版，如今市面上已难觅踪迹。而2014年再版时，该书以 *CC BY-NC-ND* 协议发布在<http://www.ccs.neu.edu/home/matthias/HtDP2e>，免费查看全文，但禁止演绎，因此找不到中译版。